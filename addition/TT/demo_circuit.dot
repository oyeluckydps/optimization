# Network structure generated by ABC

digraph network {
size = "7.5,10";
center = true;
edge [dir = back];

{
  node [shape = plaintext];
  edge [style = invis];
  LevelTitle1 [label=""];
  LevelTitle2 [label=""];
  Level2 [label = ""];
  Level1 [label = ""];
  Level0 [label = ""];
  LevelTitle1 ->  LevelTitle2 ->  Level2 ->  Level1 ->  Level0;
}

{
  rank = same;
  LevelTitle1;
  title1 [shape=plaintext,
          fontsize=20,
          fontname = "Times-Roman",
          label="Network structure visualized by ABC\nBenchmark \"demo_addition_results\". Time was Tue Jun 24 11:36:05 2025. "
         ];
}

{
  rank = same;
  LevelTitle2;
  title2 [shape=plaintext,
          fontsize=18,
          fontname = "Times-Roman",
          label="The network contains 8 logic nodes and 0 latches.\n"
         ];
}

{
  rank = same;
  Level2;
  Node17 [label = "result_7", shape = invtriangle, color = coral, fillcolor = coral];
  Node18 [label = "result_6", shape = invtriangle, color = coral, fillcolor = coral];
  Node19 [label = "result_5", shape = invtriangle, color = coral, fillcolor = coral];
  Node20 [label = "result_4", shape = invtriangle, color = coral, fillcolor = coral];
  Node21 [label = "result_3", shape = invtriangle, color = coral, fillcolor = coral];
  Node22 [label = "result_2", shape = invtriangle, color = coral, fillcolor = coral];
  Node23 [label = "result_1", shape = invtriangle, color = coral, fillcolor = coral];
  Node24 [label = "result_0", shape = invtriangle, color = coral, fillcolor = coral];
}

{
  rank = same;
  Level1;
  Node30 [label = "31\n00000---0000---- 1\n00001---00000--- 1\n000010-100001111 1\n00001-100000111- 1\n00001-1100001101 1\n00001-1100001110 1\n00001100000011-- 1\n0000110100001-11 1\n000011010000110- 1\n0000110100001110 1\n000011100000101- 1\n000011100000110- 1\n00001111000010-1 1\n0000111100001010 1\n0000111100001100 1\n0000111100001111 1", shape = ellipse];
  Node31 [label = "32\n38 cubes", shape = ellipse];
  Node32 [label = "33\n34 cubes", shape = ellipse];
}

{
  rank = same;
  Level0;
  Node1 [label = "op1_7", shape = triangle, color = coral, fillcolor = coral];
  Node2 [label = "op1_6", shape = triangle, color = coral, fillcolor = coral];
  Node3 [label = "op1_5", shape = triangle, color = coral, fillcolor = coral];
  Node4 [label = "op1_4", shape = triangle, color = coral, fillcolor = coral];
  Node5 [label = "op1_3", shape = triangle, color = coral, fillcolor = coral];
  Node6 [label = "op1_2", shape = triangle, color = coral, fillcolor = coral];
  Node7 [label = "op1_1", shape = triangle, color = coral, fillcolor = coral];
  Node8 [label = "op1_0", shape = triangle, color = coral, fillcolor = coral];
  Node9 [label = "op2_7", shape = triangle, color = coral, fillcolor = coral];
  Node10 [label = "op2_6", shape = triangle, color = coral, fillcolor = coral];
  Node11 [label = "op2_5", shape = triangle, color = coral, fillcolor = coral];
  Node12 [label = "op2_4", shape = triangle, color = coral, fillcolor = coral];
  Node13 [label = "op2_3", shape = triangle, color = coral, fillcolor = coral];
  Node14 [label = "op2_2", shape = triangle, color = coral, fillcolor = coral];
  Node15 [label = "op2_1", shape = triangle, color = coral, fillcolor = coral];
  Node16 [label = "op2_0", shape = triangle, color = coral, fillcolor = coral];
  Node33 [label = "Const0", shape = ellipse, color = coral, fillcolor = coral];
  Node34 [label = "Const0", shape = ellipse, color = coral, fillcolor = coral];
  Node35 [label = "Const0", shape = ellipse, color = coral, fillcolor = coral];
  Node36 [label = "Const0", shape = ellipse, color = coral, fillcolor = coral];
  Node37 [label = "Const0", shape = ellipse, color = coral, fillcolor = coral];
}

title1 -> title2 [style = invis];
title2 -> Node17 [style = invis];
title2 -> Node18 [style = invis];
title2 -> Node19 [style = invis];
title2 -> Node20 [style = invis];
title2 -> Node21 [style = invis];
title2 -> Node22 [style = invis];
title2 -> Node23 [style = invis];
title2 -> Node24 [style = invis];
Node17 -> Node18 [style = invis];
Node18 -> Node19 [style = invis];
Node19 -> Node20 [style = invis];
Node20 -> Node21 [style = invis];
Node21 -> Node22 [style = invis];
Node22 -> Node23 [style = invis];
Node23 -> Node24 [style = invis];
Node17 -> Node33 [style = solid];
Node18 -> Node34 [style = solid];
Node19 -> Node35 [style = solid];
Node20 -> Node36 [style = solid];
Node21 -> Node37 [style = solid];
Node22 -> Node30 [style = solid];
Node23 -> Node31 [style = solid];
Node24 -> Node32 [style = solid];
Node30 -> Node1 [style = solid];
Node30 -> Node2 [style = solid];
Node30 -> Node3 [style = solid];
Node30 -> Node4 [style = solid];
Node30 -> Node5 [style = solid];
Node30 -> Node6 [style = solid];
Node30 -> Node7 [style = solid];
Node30 -> Node8 [style = solid];
Node30 -> Node9 [style = solid];
Node30 -> Node10 [style = solid];
Node30 -> Node11 [style = solid];
Node30 -> Node12 [style = solid];
Node30 -> Node13 [style = solid];
Node30 -> Node14 [style = solid];
Node30 -> Node15 [style = solid];
Node30 -> Node16 [style = solid];
Node31 -> Node1 [style = solid];
Node31 -> Node2 [style = solid];
Node31 -> Node3 [style = solid];
Node31 -> Node4 [style = solid];
Node31 -> Node5 [style = solid];
Node31 -> Node6 [style = solid];
Node31 -> Node7 [style = solid];
Node31 -> Node8 [style = solid];
Node31 -> Node9 [style = solid];
Node31 -> Node10 [style = solid];
Node31 -> Node11 [style = solid];
Node31 -> Node12 [style = solid];
Node31 -> Node13 [style = solid];
Node31 -> Node14 [style = solid];
Node31 -> Node15 [style = solid];
Node31 -> Node16 [style = solid];
Node32 -> Node1 [style = solid];
Node32 -> Node2 [style = solid];
Node32 -> Node3 [style = solid];
Node32 -> Node4 [style = solid];
Node32 -> Node5 [style = solid];
Node32 -> Node6 [style = solid];
Node32 -> Node7 [style = solid];
Node32 -> Node8 [style = solid];
Node32 -> Node9 [style = solid];
Node32 -> Node10 [style = solid];
Node32 -> Node11 [style = solid];
Node32 -> Node12 [style = solid];
Node32 -> Node13 [style = solid];
Node32 -> Node14 [style = solid];
Node32 -> Node15 [style = solid];
Node32 -> Node16 [style = solid];
}

