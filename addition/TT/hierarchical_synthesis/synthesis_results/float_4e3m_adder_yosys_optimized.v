/* Generated by Yosys 0.33 (git sha1 2584903a060) */

(* top =  1  *)
(* src = "/mnt/d/OneDrive/projects/Attention-VLSI/optimization/addition/TT/hierarchical_synthesis/synthesis_results/float_4e3m_adder_behavioral.v:4.1-271.10" *)
module float_4e3m_adder(operands, result);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  (* src = "/mnt/d/OneDrive/projects/Attention-VLSI/optimization/addition/TT/hierarchical_synthesis/synthesis_results/float_4e3m_adder_behavioral.v:5.18-5.26" *)
  input [15:0] operands;
  wire [15:0] operands;
  (* src = "/mnt/d/OneDrive/projects/Attention-VLSI/optimization/addition/TT/hierarchical_synthesis/synthesis_results/float_4e3m_adder_behavioral.v:6.22-6.28" *)
  output [7:0] result;
  wire [7:0] result;
  assign result[0] = 16'h7fff >> { _087_, _077_, _021_, _033_ };
  assign _033_ = 16'h1000 >> { _045_, _034_, _066_, _063_ };
  assign _034_ = 16'hdf50 >> { _043_, _044_, _040_, _038_ };
  assign _035_ = 16'h0001 >> operands[7:4];
  assign _036_ = 4'h8 >> operands[1:0];
  assign _037_ = 8'h7f >> { operands[9], _039_, _038_ };
  assign _038_ = 16'h0001 >> operands[15:12];
  assign _039_ = 4'h4 >> operands[11:10];
  assign _040_ = 8'h7f >> { operands[1], _035_, _041_ };
  assign _041_ = 4'h1 >> operands[3:2];
  assign _042_ = 4'h4 >> operands[1:0];
  assign _043_ = 16'hf1ff >> { _035_, operands[3], _036_, operands[2] };
  assign _044_ = 8'hbf >> { _038_, _039_, operands[9] };
  assign _045_ = 8'h01 >> { _057_, _052_, _046_ };
  assign _046_ = 8'h0e >> { _047_, _050_, _048_ };
  assign _047_ = 16'h9fff >> { _041_, _035_, operands[1:0] };
  assign _048_ = 16'h0e00 >> { _038_, operands[11], _049_, operands[10] };
  assign _049_ = 4'h8 >> { operands[8], operands[9] };
  assign _050_ = 16'h1000 >> { _051_, _038_, operands[8], operands[9] };
  assign _051_ = 4'h8 >> operands[11:10];
  assign _052_ = 8'h40 >> { _056_, _053_, _054_ };
  assign _053_ = 8'h40 >> { _038_, operands[9:8] };
  assign _054_ = 8'h7f >> { operands[1], _055_, _035_ };
  assign _055_ = 4'h4 >> operands[3:2];
  assign _056_ = 4'h1 >> operands[11:10];
  assign _057_ = 16'heee0 >> { _059_, _058_, _062_, _061_ };
  assign _058_ = 16'h1000 >> { _041_, _035_, operands[1:0] };
  assign _059_ = 8'h80 >> { _060_, _036_, _035_ };
  assign _060_ = 4'h8 >> operands[3:2];
  assign _061_ = 16'h1000 >> { _056_, _038_, operands[8], operands[9] };
  assign _062_ = 8'h80 >> { _051_, _049_, _038_ };
  assign _063_ = 16'h8f00 >> { _061_, _064_, _060_, _065_ };
  assign _064_ = 4'h8 >> { _047_, _043_ };
  assign _065_ = 4'h8 >> { _042_, _035_ };
  assign _066_ = 16'h008f >> { _067_, _064_, _068_, _058_ };
  assign _067_ = 8'h01 >> { _069_, _068_, _062_ };
  assign _068_ = 16'h4000 >> { _038_, operands[9], _051_, operands[8] };
  assign _069_ = 16'h4000 >> { operands[8], _038_, _051_, operands[9] };
  assign _070_ = 8'h80 >> { _055_, _036_, _035_ };
  assign _071_ = 16'h1000 >> { _060_, _035_, operands[1:0] };
  assign _072_ = 16'h9fff >> { _055_, _035_, operands[1:0] };
  assign _073_ = 16'h1000 >> { _055_, _035_, operands[1:0] };
  assign _074_ = 16'h9fff >> { _060_, _035_, operands[1:0] };
  assign _075_ = 8'h07 >> { _076_, _053_, _056_ };
  assign _076_ = 16'h4000 >> { operands[8], _038_, _056_, operands[9] };
  assign _077_ = 4'h8 >> { _025_, _078_ };
  assign _078_ = 8'hd0 >> { _080_, _079_, _062_ };
  assign _079_ = 4'h1 >> { _071_, _070_ };
  assign _080_ = 16'hb0bb >> { _081_, _044_, _076_, _082_ };
  assign _081_ = 16'h4000 >> { _035_, operands[0], _041_, operands[1] };
  assign _082_ = 8'hbf >> { _035_, _055_, operands[1] };
  assign _083_ = 8'h80 >> { _049_, _039_, _038_ };
  assign _084_ = 16'h4000 >> { _038_, operands[9], _039_, operands[8] };
  assign _085_ = 8'h7f >> { operands[1], _060_, _035_ };
  assign _086_ = 8'hbf >> { _035_, _060_, operands[1] };
  assign _087_ = 16'h8000 >> { _001_, _094_, _090_, _088_ };
  assign _088_ = 16'hb0bb >> { _083_, _079_, _089_, _085_ };
  assign _089_ = 16'h1000 >> { _039_, _038_, operands[8], operands[9] };
  assign _090_ = 8'h0b >> { _091_, _093_, _074_ };
  assign _091_ = 8'he0 >> { _092_, _068_, _069_ };
  assign _092_ = 16'h4000 >> { _035_, operands[0], _055_, operands[1] };
  assign _093_ = 16'h4000 >> { operands[8], _038_, _039_, operands[9] };
  assign _094_ = 8'h10 >> { _000_, _096_, _095_ };
  assign _095_ = 8'he0 >> { _073_, _062_, _068_ };
  assign _096_ = 8'h80 >> { _055_, _069_, _065_ };
  assign _000_ = 16'hb0bb >> { _084_, _086_, _050_, _054_ };
  assign _001_ = 4'h4 >> { _003_, _002_ };
  assign _002_ = 16'h00f8 >> { _072_, _093_, _092_, _084_ };
  assign _003_ = 16'hb0bb >> { _089_, _054_, _073_, _037_ };
  assign result[1] = 16'h7fff >> { _009_, _028_, _021_, _033_ };
  assign _004_ = 16'h000b >> { _006_, _005_, _061_, _086_ };
  assign _005_ = 8'h40 >> { _041_, _065_, _044_ };
  assign _006_ = 8'h40 >> { _056_, _053_, _082_ };
  assign _007_ = 16'hb0bb >> { _076_, _054_, _062_, _074_ };
  assign _008_ = 4'h4 >> { _081_, _037_ };
  assign _009_ = 16'h8000 >> { _010_, _094_, _090_, _088_ };
  assign _010_ = 16'h0100 >> { _012_, _014_, _013_, _011_ };
  assign _011_ = 16'hfac0 >> { _073_, _050_, _092_, _069_ };
  assign _012_ = 16'hb0bb >> { _089_, _086_, _084_, _054_ };
  assign _013_ = 4'h4 >> { _083_, _072_ };
  assign _014_ = 8'he0 >> { _093_, _070_, _071_ };
  assign result[2] = 16'h7fff >> { _032_, _028_, _021_, _033_ };
  assign _015_ = 4'h4 >> { _083_, _074_ };
  assign _016_ = 8'he0 >> { _069_, _070_, _071_ };
  assign _017_ = 16'hb0bb >> { _084_, _085_, _050_, _086_ };
  assign _018_ = 16'hb0bb >> { _068_, _054_, _061_, _082_ };
  assign _019_ = 16'hbf00 >> { _060_, operands[0], operands[1], _036_ };
  assign _020_ = 16'h0bff >> { _035_, _048_, _019_, _075_ };
  assign _021_ = 16'hf400 >> { _020_, _075_, _064_, _058_ };
  assign _022_ = 16'hca00 >> { _060_, operands[1], _050_, _068_ };
  assign _023_ = 16'hb0bb >> { _061_, _054_, _069_, _074_ };
  assign _024_ = 16'h035f >> { _083_, _058_, _059_, _084_ };
  assign _025_ = 16'h7000 >> { _024_, _023_, _022_, _035_ };
  assign _026_ = 16'h035f >> { _058_, _069_, _050_, _059_ };
  assign _027_ = 16'h0b00 >> { _007_, _008_, _068_, _085_ };
  assign _028_ = 8'h80 >> { _004_, _027_, _026_ };
  assign _029_ = 16'h035f >> { _093_, _058_, _059_, _089_ };
  assign _030_ = 16'h8f00 >> { _080_, _062_, _079_, _072_ };
  assign _031_ = 16'h1000 >> { _018_, _017_, _016_, _015_ };
  assign _032_ = 16'h8000 >> { _025_, _031_, _030_, _029_ };
  assign result[7:3] = 5'h00;
endmodule
